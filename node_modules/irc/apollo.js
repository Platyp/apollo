#!/usr/bin/env node

var irc  = require('./lib/irc.js');
var util = require('util');
var color = require('ansi-color').set;
var approvedUsers = {"Platyp": true, "BlaqkAngel": true};
var myNick = 'Apollo';
var pass = 'BlackfyreFries';
var channel = '#prismata';

var c = new irc.Client(
    'irc.foonetic.net',
    myNick,
    {
        channels: [channel],
        //debug: true
    }
);

var snipe = function(target){
    
};

c.addListener('raw', function(message) { console.log('raw: ', message) });
c.addListener('message', function(from, to, message){
    console.log('from ' + from + ' and to ' + to);
    if((from in approvedUsers) && to === channel){
        var tokens = message.split(' ');
        c.say('Goodbye.');
        if(tokens.length == 3 && tokens[0].toLowerCase() == 'apollo:' 
                && tokens[1].toLowerCase() == 'snipe'){
            c.send('KICK', channel, tokens[2], 'One shot, one kill.');
        }
    }
});

c.addListener('error', function(message) { console.log(color('error: ', 'red'), message) });
c.addListener('notice', function(nick, to, text, message){
    if(nick === 'NickServ' && to === myNick && message.args.length >= 2 &&
            message.args[1] === 'This nickname is registered. Please choose a different nickname, or identify via \u0002/msg NickServ identify <password>\u0002.'){
        c.say('NickServ', 'identify ' + pass);
    }
});

var repl = require('repl').start('> ');
repl.context.repl = repl;
repl.context.util = util;
repl.context.irc = irc;
repl.context.c = c;

repl.inputStream.addListener('close', function() {
    console.log("\nClosing session");
    c.disconnect('Closing session');
});

